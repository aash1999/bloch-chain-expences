{"ast":null,"code":"var _jsxFileName = \"/Users/aakashsingh/Documents/Developer/Block Chain/block-chain-viz/client/src/Components/form/form.js\",\n    _s = $RefreshSig$();\n\nimport \"./form.css\"; //import React from \"react\";\n\nimport React, { useState, useEffect } from 'react';\nimport ProgressBar from 'react-animated-progress-bar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form() {\n  _s();\n\n  //var blockIndex = 1;\n  var timeStamp;\n  var [previousHash, setPreviousHash] = useState(\"bjhdb2321FWDF342SD1ssdf\");\n  var [blockIndex, setBlockIndex] = useState(\"\");\n  var [submited, setSubmitted] = useState(false);\n  var [isMining, setIsMining] = useState(false);\n  const [disc, setDisc] = useState(\"\");\n  const [amt, setAmt] = useState(\"\");\n  const [paidChecked, setPaidChecked] = useState(true);\n  const [receivedChecked, setReceivedChecked] = useState(false);\n  var nonce;\n  var diffucuilty = 4;\n\n  function fetchLoadData() {\n    if (submited == false) {\n      setIsMining(true);\n      const requestOptions1 = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      };\n      fetch('http://127.0.0.1:5000/getSummary', requestOptions1).then(response => response.json(), err => console.log('TCL : err', err)).then(data => {\n        setPreviousHash(data.hash);\n        setBlockIndex(data.blockIndex);\n        setSubmitted(true);\n        setIsMining(false); //alert(data);\n      });\n    }\n  }\n\n  useEffect(() => {\n    fetchLoadData();\n  }, []);\n\n  function MineBlock() {\n    var paid_data;\n\n    if (paidChecked == true) {\n      paid_data = \"true\";\n    } else {\n      paid_data = \"false\";\n    }\n\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: new URLSearchParams({\n        'data': disc,\n        'paid': paid_data,\n        'amount': amt\n      })\n    };\n    fetch('http://127.0.0.1:5000/mineblock', requestOptions).then(response => response.json()).then(async data => {\n      console.log(data);\n      setSubmitted(true);\n      await fetchLoadData();\n    });\n  }\n\n  var [nonceCount, setNonceCount] = useState(1);\n\n  if (isMining == false) {\n    // after development turn it to false\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"new-block-mine\",\n        onSubmit: MineBlock,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-heading\",\n          children: \"New Payment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"amount\",\n            children: \"Amount :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"text-box\",\n            name: \"amount\",\n            rows: \"1\",\n            cols: \"10\",\n            autoCorrect: \"off\",\n            spellCheck: \"false\",\n            maxLength: \"100\",\n            value: amt,\n            onChange: e => setAmt(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 76\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 49\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            checked: paidChecked,\n            onChange: () => {\n              setPaidChecked(!paidChecked);\n              setReceivedChecked(!receivedChecked);\n            },\n            type: \"checkbox\",\n            id: \"paid\",\n            name: \"paid\",\n            value: \"paid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"paid\",\n            children: \"Paid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 67\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            checked: receivedChecked,\n            onChange: () => {\n              setPaidChecked(!paidChecked);\n              setReceivedChecked(!receivedChecked);\n            },\n            type: \"checkbox\",\n            id: \"received\",\n            name: \"received\",\n            value: \"received\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"received\",\n            children: \"Received\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 75\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"data\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 80\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"text-box\",\n            name: \"message\",\n            rows: \"2\",\n            cols: \"30\",\n            autoCorrect: \"off\",\n            spellCheck: \"false\",\n            maxLength: \"60\",\n            value: disc,\n            onChange: e => setDisc(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-bottom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mine-button\",\n          type: \"submit\",\n          children: \"Mine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }, this);\n  } else {\n    // setNonceCount(nonceCount+1);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-pos\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"mining-heading\",\n            children: \"Mining . . . \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n            className: \"progress-bar\",\n            width: \"20vw\",\n            height: \"10px\",\n            rect: true // fontColor=\"#04C1B7\"\n            ,\n            fontColor: \"black\",\n            percentage: \"99\",\n            rectPadding: \"1px\",\n            rectBorderRadius: \"20px\",\n            trackPathColor: \"transparent\" // bgColor=\"#04C1B7\"\n            ,\n            bgColor: \"black\",\n            trackBorderColor: \"grey\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Form, \"dW8pzNp6EGihKjDN+2VdUYPLcew=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/aakashsingh/Documents/Developer/Block Chain/block-chain-viz/client/src/Components/form/form.js"],"names":["React","useState","useEffect","ProgressBar","Form","timeStamp","previousHash","setPreviousHash","blockIndex","setBlockIndex","submited","setSubmitted","isMining","setIsMining","disc","setDisc","amt","setAmt","paidChecked","setPaidChecked","receivedChecked","setReceivedChecked","nonce","diffucuilty","fetchLoadData","requestOptions1","method","headers","fetch","then","response","json","err","console","log","data","hash","MineBlock","paid_data","requestOptions","body","URLSearchParams","nonceCount","setNonceCount","e","target","value"],"mappings":"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","sourcesContent":["import \"./form.css\"\n//import React from \"react\";\nimport React, { useState ,useEffect} from 'react';\nimport ProgressBar from 'react-animated-progress-bar';\n\nfunction Form(){\n    //var blockIndex = 1;\n    var timeStamp;\n    var [previousHash , setPreviousHash]= useState(\"bjhdb2321FWDF342SD1ssdf\");\n    var [blockIndex , setBlockIndex]= useState(\"\");\n    var [submited , setSubmitted] = useState(false);\n    var [isMining , setIsMining ] = useState(false);\n    const [disc, setDisc] = useState(\"\");\n    const [amt, setAmt] = useState(\"\");\n    const [paidChecked , setPaidChecked] = useState(true);\n    const [receivedChecked , setReceivedChecked] = useState(false);\n\n\n    var nonce;\n    var diffucuilty = 4;\n\n     function fetchLoadData(){\n        if(submited == false){\n            setIsMining(true);\n            const requestOptions1 = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            };\n            fetch('http://127.0.0.1:5000/getSummary', requestOptions1)\n                .then(response => response.json(),err => console.log('TCL : err',err))\n                .then((data)=>{ \n                    setPreviousHash(data.hash);\n                    setBlockIndex(data.blockIndex);\n                    setSubmitted(true);\n                    setIsMining(false);\n                //alert(data);\n                });\n        }\n\n    }\n\n    useEffect( () => {\n        fetchLoadData();\n           \n      },[]);\n    \n    \n    function MineBlock(){\n        var paid_data;\n        if(paidChecked == true){\n            paid_data = \"true\"\n        }else{\n            paid_data= \"false\"\n        }\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            body:  new URLSearchParams({\n            'data': disc,\n            'paid' : paid_data,\n            'amount' : amt,\n        }) \n        };\n        fetch('http://127.0.0.1:5000/mineblock', requestOptions)\n            .then(response => response.json())\n            .then(async (data)=>{ \n            console.log(data)\n            setSubmitted(true);\n            await fetchLoadData();\n            });\n    \n\n    }\n    var [nonceCount ,setNonceCount]= useState(1);\n\n    if(isMining == false){// after development turn it to false\n       return(<div className = \"form-container\" >\n                                <form   id=\"new-block-mine\"  onSubmit = {MineBlock}>\n                                <div className = \"card-header\"></div>\n                                <div className = \"form-heading\">New Payment</div>\n                                <div className = \"form-card\" >\n                                    {/* <div className = \"block-index\">Index : {blockIndex}</div> */}\n                                    {/* <div className = \"previous-hash\">Previous Block<span><p className = \"hash\">{previousHash}</p></span></div> */}\n                                    <div className =\"amount\">Amount :</div><textarea \n                                            className=\"text-box\"\n                                            name=\"amount\" \n                                            rows=\"1\" \n                                            cols=\"10\"\n                                            autoCorrect=\"off\"\n                                            spellCheck= \"false\"\n                                            maxLength =\"100\"\n                                            value = {amt}\n                                            onChange = {(e)=>setAmt(e.target.value)}\n                                    ></textarea><br></br>\n\n                                    <input \n                                        checked={paidChecked} \n                                        onChange = {()=>{\n                                            setPaidChecked(!paidChecked);\n                                            setReceivedChecked(!receivedChecked);\n                                        }}\n                                        type=\"checkbox\" \n                                        id=\"paid\" \n                                        name=\"paid\" \n                                        value=\"paid\"/>\n                                    <label for=\"paid\">Paid</label><br></br>\n                                    \n                                    <input \n                                        checked={receivedChecked}\n                                        onChange ={()=>{\n                                            setPaidChecked(!paidChecked);\n                                            setReceivedChecked(!receivedChecked);\n                                        }}\n                                        type=\"checkbox\" \n                                        id=\"received\" \n                                        name=\"received\" \n                                        value=\"received\"/>\n                                    <label for=\"received\">Received</label><br></br>\n                                    \n\n                                    <label className=\"data\">Description</label><br></br>\n                                    <textarea \n                                            className=\"text-box\"\n                                            name=\"message\" \n                                            rows=\"2\" \n                                            cols=\"30\"\n                                            autoCorrect=\"off\"\n                                            spellCheck= \"false\"\n                                            maxLength =\"60\"\n                                            value = {disc}\n                                            onChange = {(e)=>setDisc(e.target.value)}\n                                    ></textarea>\n                                    <div className= \"text-bottom\"></div>\n                                    <br></br>\n\n                                </div>\n                                {/* <div className=\"back-img\"></div> */}\n\n\n                                <button  className=\"mine-button\" type=\"submit\" >Mine</button>\n                            </form>\n                            \n                            \n                            {/* <div className=\"back-img\"></div> */}\n\n                </div>)\n            \n\n\n    }else{\n        // setNonceCount(nonceCount+1);\n        return(\n            \n            <div className = \"form-container\" >\n                <div className =  \"loading-pos\">\n                    <div className = \"loading-flex\">\n                        <h1 className = \"mining-heading\">Mining . . . </h1>\n                        <ProgressBar\n                            className = \"progress-bar\"\n                            width=\"20vw\"\n                            height=\"10px\"\n                            rect\n                            // fontColor=\"#04C1B7\"\n                            fontColor=\"black\"\n                            percentage=\"99\"\n                            rectPadding=\"1px\"\n                            rectBorderRadius=\"20px\"\n                            trackPathColor=\"transparent\"\n                            // bgColor=\"#04C1B7\"\n                            bgColor=\"black\"\n                            trackBorderColor=\"grey\"\n                        />\n\n                    </div>\n\n                </div>\n\n            </div>\n            )\n    }\n    \n}\nexport default Form"]},"metadata":{},"sourceType":"module"}