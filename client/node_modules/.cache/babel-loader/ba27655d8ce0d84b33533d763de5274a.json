{"ast":null,"code":"var _jsxFileName = \"/Users/aakashsingh/Documents/Developer/Block Chain/block-chain-viz/client/src/Components/chainList/chainlist.js\",\n    _s = $RefreshSig$();\n\nimport \"./chainlist.css\";\nimport Block from \"./block/block.js\"; //import React from \"react\";\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChainList() {\n  _s();\n\n  var [chain, setChain] = useState([]);\n  var [chainList, setChainList] = useState([]);\n  var [listUpdated, setListUpdated] = useState(false);\n\n  function fetchChain() {\n    const requestOptions1 = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      block: new URLSearchParams({\n        'start_index': 0,\n        'end_index': 100\n      })\n    };\n    fetch('http://127.0.0.1:5000/getchain', requestOptions1).then(response => response.json(), err => console.log('TCL : err', err)).then(data => {\n      setChain(data.chain); // setChain([{index :2 ,\n      //     previous_hash : 'sdjksfjkd',\n      // }])\n      // var tempchain = chain.map((block,index)=>{\n      //     return(\n      //         <Block blockData = {block}/>\n      //     )\n      // })\n      // setChainList(tempchain)\n\n      console.log(data);\n    });\n  } // var chainList= []\n\n\n  useEffect(() => {\n    // if(listUpdated == false){\n    fetchChain();\n    setListUpdated(true); // }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chainList-container\",\n    children: chain.map((block, index) => /*#__PURE__*/_jsxDEV(Block, {\n      blockData: block\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChainList, \"DLI/RP6Xzt1gZmQctpcdzLG63P4=\");\n\n_c = ChainList;\nexport default ChainList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChainList\");","map":{"version":3,"sources":["/Users/aakashsingh/Documents/Developer/Block Chain/block-chain-viz/client/src/Components/chainList/chainlist.js"],"names":["Block","React","useState","useEffect","ChainList","chain","setChain","chainList","setChainList","listUpdated","setListUpdated","fetchChain","requestOptions1","method","headers","block","URLSearchParams","fetch","then","response","json","err","console","log","data","map","index"],"mappings":";;;AAAA,OAAO,iBAAP;AACA,OAAOA,KAAP,MAAkB,kBAAlB,C,CACA;;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;;;AAEA,SAASC,SAAT,GAAoB;AAAA;;AAEhB,MAAI,CAACC,KAAD,EAAOC,QAAP,IAAmBJ,QAAQ,CAAC,EAAD,CAA/B;AACA,MAAI,CAACK,SAAD,EAAWC,YAAX,IAA2BN,QAAQ,CAAC,EAAD,CAAvC;AACA,MAAI,CAACO,WAAD,EAAeC,cAAf,IAAiCR,QAAQ,CAAC,KAAD,CAA7C;;AAEA,WAASS,UAAT,GAAqB;AAEb,UAAMC,eAAe,GAAG;AACpBC,MAAAA,MAAM,EAAE,KADY;AAEpBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFW;AAGpBC,MAAAA,KAAK,EAAG,IAAIC,eAAJ,CAAoB;AACxB,uBAAe,CADS;AAExB,qBAAc;AAFU,OAApB;AAHY,KAAxB;AAQCC,IAAAA,KAAK,CAAC,gCAAD,EAAmCL,eAAnC,CAAL,CACIM,IADJ,CACSC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADrB,EACqCC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBF,GAAxB,CAD5C,EAEIH,IAFJ,CAEUM,IAAD,IAAQ;AACVlB,MAAAA,QAAQ,CAACkB,IAAI,CAACnB,KAAN,CAAR,CADU,CAEV;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEAiB,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACH,KAlBJ;AAoBR,GApCe,CAqChB;;;AACArB,EAAAA,SAAS,CAAE,MAAM;AACb;AACIQ,IAAAA,UAAU;AACVD,IAAAA,cAAc,CAAC,IAAD,CAAd,CAHS,CAIb;AAID,GARM,EAQL,EARK,CAAT;AAaA,sBAEI;AAAK,IAAA,SAAS,EAAG,qBAAjB;AAAA,cAKQL,KAAK,CAACoB,GAAN,CAAU,CAACV,KAAD,EAAOW,KAAP,kBACV,QAAC,KAAD;AAAO,MAAA,SAAS,EAAIX;AAApB;AAAA;AAAA;AAAA;AAAA,YADA;AALR;AAAA;AAAA;AAAA;AAAA,UAFJ;AAgBH;;GAnEQX,S;;KAAAA,S;AAoET,eAAeA,SAAf","sourcesContent":["import \"./chainlist.css\"\nimport Block from \"./block/block.js\"\n//import React from \"react\";\nimport React, { useState ,useEffect} from 'react';\n\nfunction ChainList(){\n\n    var [chain,setChain] = useState([]);\n    var [chainList,setChainList] = useState([]);\n    var [listUpdated , setListUpdated] = useState(false);\n\n    function fetchChain(){\n\n            const requestOptions1 = {\n                method: 'GET',\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                block : new URLSearchParams({\n                    'start_index': 0,\n                    'end_index' : 100\n                }) \n            };\n             fetch('http://127.0.0.1:5000/getchain', requestOptions1)\n                .then(response => response.json(),err => console.log('TCL : err',err))\n                .then((data)=>{ \n                    setChain(data.chain);\n                    // setChain([{index :2 ,\n                    //     previous_hash : 'sdjksfjkd',\n\n                        \n                    // }])\n                    // var tempchain = chain.map((block,index)=>{\n                    //     return(\n                    //         <Block blockData = {block}/>\n                    //     )\n\n                    // })\n                    // setChainList(tempchain)\n\n                    console.log(data);\n                });\n\n    }\n    // var chainList= []\n    useEffect( () => {\n        // if(listUpdated == false){\n            fetchChain();\n            setListUpdated(true);\n        // }\n\n        \n           \n      },[]);\n\n    \n    \n\n    return(\n        \n        <div className = \"chainList-container\" >\n           \n            {/* <Block/> */}\n            {/* {chainList} */}\n            {\n                chain.map((block,index)=>(\n                <Block blockData = {block}/>\n    ))\n            }\n\n        </div>\n    )\n\n\n}\nexport default ChainList"]},"metadata":{},"sourceType":"module"}