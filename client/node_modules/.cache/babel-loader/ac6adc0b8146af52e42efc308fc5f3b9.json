{"ast":null,"code":"var _jsxFileName = \"/Users/aakashsingh/Documents/Developer/Block Chain/block-chain-viz/client/src/Components/form/form.js\",\n    _s = $RefreshSig$();\n\nimport \"./form.css\"; //import React from \"react\";\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form() {\n  _s();\n\n  //var blockIndex = 1;\n  var timeStamp;\n  var [previousHash, setPreviousHash] = useState(\"bjhdb2321FWDF342SD1ssdf\");\n  var [blockIndex, setBlockIndex] = useState(\"\");\n  var [submited, setSubmitted] = useState(false);\n  var [isMining, setIsMining] = useState(false);\n  const [data, setData] = useState(\"\");\n  var nonce;\n  var diffucuilty = 4;\n\n  function fetchLoadData() {\n    //alert('hi')\n    if (submited == false) {\n      setIsMining(true);\n      const requestOptions1 = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      };\n      fetch('http://127.0.0.1:5000/getPreviousBlock', requestOptions1).then(response => response.json(), err => console.log('TCL : err', err)).then(data => {\n        setPreviousHash(data.hash);\n        setBlockIndex(data.blockIndex);\n        setSubmitted(true);\n        setIsMining(false); //alert(data);\n      });\n    }\n  }\n\n  useEffect(() => {\n    fetchLoadData();\n  });\n\n  function MineBlock() {\n    //alert(\"hi\")\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: new URLSearchParams({\n        'data': data\n      })\n    };\n    fetch('http://127.0.0.1:5000/mineblock', requestOptions).then(response => response.json()).then(async data => {\n      //alert(\"hi\")\n      console.log(data);\n      setSubmitted(true);\n      await fetchLoadData(); //setCount(count + 1);\n    });\n  }\n\n  let displayContent = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"new-block-mine\",\n      onSubmit: MineBlock,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-heading\",\n        children: \"New Block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block-index\",\n        children: [\"Index : \", blockIndex]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"previous-hash\",\n        children: [\"Previous Block : \", previousHash]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"data\",\n        children: \"Data : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 66\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"message\",\n        rows: \"10\",\n        cols: \"30\",\n        value: data,\n        onChange: e => setData(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 45\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 33\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 26\n  }, this);\n\n  return {\n    displayContent\n  };\n}\n\n_s(Form, \"JrKJYEqFTS19X30/SSUMKVR9ls0=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/aakashsingh/Documents/Developer/Block Chain/block-chain-viz/client/src/Components/form/form.js"],"names":["React","useState","useEffect","Form","timeStamp","previousHash","setPreviousHash","blockIndex","setBlockIndex","submited","setSubmitted","isMining","setIsMining","data","setData","nonce","diffucuilty","fetchLoadData","requestOptions1","method","headers","fetch","then","response","json","err","console","log","hash","MineBlock","requestOptions","body","URLSearchParams","displayContent","e","target","value"],"mappings":"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","sourcesContent":["import \"./form.css\"\n//import React from \"react\";\nimport React, { useState ,useEffect} from 'react';\n\nfunction Form(){\n    //var blockIndex = 1;\n    var timeStamp;\n    var [previousHash , setPreviousHash]= useState(\"bjhdb2321FWDF342SD1ssdf\");\n    var [blockIndex , setBlockIndex]= useState(\"\");\n    var [submited , setSubmitted] = useState(false);\n    var [isMining , setIsMining ] = useState(false);\n    const [data, setData] = useState(\"\");\n\n    var nonce;\n    var diffucuilty = 4;\n\n     function fetchLoadData(){\n         //alert('hi')\n        if(submited == false){\n            setIsMining(true);\n            const requestOptions1 = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            };\n            fetch('http://127.0.0.1:5000/getPreviousBlock', requestOptions1)\n                .then(response => response.json(),err => console.log('TCL : err',err))\n                .then((data)=>{ \n                    setPreviousHash(data.hash);\n                    setBlockIndex(data.blockIndex);\n                    setSubmitted(true);\n                    setIsMining(false);\n                //alert(data);\n                });\n        }\n\n    }\n\n    useEffect( () => {\n        fetchLoadData();\n           \n      });\n    \n    \n    function MineBlock(){\n        //alert(\"hi\")\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            body:  new URLSearchParams({\n            'data': data,\n        }) \n        };\n        fetch('http://127.0.0.1:5000/mineblock', requestOptions)\n            .then(response => response.json())\n            .then(async (data)=>{ \n            //alert(\"hi\")\n            console.log(data)\n            setSubmitted(true);\n            await fetchLoadData();\n            //setCount(count + 1);\n            });\n    \n\n    }\n\n    let displayContent = <div className = \"form-container\" >\n                                <form   id=\"new-block-mine\"  onSubmit = {MineBlock}>\n\n                                <div className = \"form-heading\">New Block</div>\n                                <div className = \"block-index\">Index : {blockIndex}</div>\n                                <div className = \"previous-hash\">Previous Block : {previousHash}</div>\n                                <label for=\"data\">Data : </label><br></br>\n                                <textarea \n                                        name=\"message\" \n                                        rows=\"10\" \n                                        cols=\"30\"\n                                        value = {data}\n                                        onChange = {(e)=>setData(e.target.value)}\n                                ></textarea><br></br>\n                                <button type=\"submit\" >Submit</button>\n\n                            </form>\n\n                        </div>\n            \n\n    return(\n        {displayContent}\n    )\n}\nexport default Form"]},"metadata":{},"sourceType":"module"}